package se.dosf.communitybase.beans;

import java.util.ArrayList;
import java.util.List;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import se.unlogic.hierarchy.core.beans.Group;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToMany;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.string.StringUtils;
import se.unlogic.standardutils.xml.Elementable;
import se.unlogic.standardutils.xml.XMLElement;
import se.unlogic.standardutils.xml.XMLUtils;

@Table(name="groups")
@XMLElement
public class CommunityGroup extends Group implements Elementable {

	public CommunityGroup() { }
	
	public CommunityGroup(Integer groupID, String name, School school) {
		this.groupID = groupID;
		this.name = name;
		this.school = school;
	}

	private static final long serialVersionUID = 8659200293579096188L;

	@Key
	@DAOManaged(autoGenerated=true)
	@XMLElement
	private Integer groupID;

	@DAOManaged
	@XMLElement
	private String name;

	@DAOManaged
	@XMLElement
	private String email;

	@DAOManaged(columnName="schoolID")
	@ManyToOne(remoteKeyField="schoolID",autoGet=true)
	@XMLElement
	private School school;

	@DAOManaged
	@ManyToMany(linkTable="groupusers")
	@XMLElement
	private List<CommunityUser> users;

	public void setUsers(List<CommunityUser> users) {
		this.users = users;
	}

	public School getSchool() {
		return school;
	}

	public void setSchool(School school) {
		this.school = school;
	}

	@Override
	public String getDescription() {
		return this.name;
	}

	@Override
	public Integer getGroupID() {
		return groupID;
	}

	@Override
	public String getName() {
		return name;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getEmail() {
		return email;
	}

	public List<CommunityUser> getUsers() {
		return this.users;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}

	public void setGroupID(Integer groupID) {
		this.groupID = groupID;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Override
	public String toString() {
		return StringUtils.substring(this.name, 30, "...") + " (ID: " + this.groupID + ")";
	}

	@Override
	protected List<Element> getAdditionalXML(Document doc) {

		List<Element> elements = new ArrayList<Element>();

		if (school != null) {
			elements.add(school.toXML(doc));
		}

		if(email != null) {
			elements.add(XMLUtils.createElement("email", email, doc));
		}

		if(users != null){
			Element usersElement = doc.createElement("users");
			XMLUtils.append(doc, usersElement, users);
			elements.add(usersElement);
		}

		return elements;

	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((groupID == null) ? 0 : groupID.hashCode());
		return result;
	}
}
